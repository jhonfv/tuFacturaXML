@using tuFactura.utilitarios.Modelos.DIAN;
@using tuFactura.utilitarios.Modelos.Factura;

@model ResultadoProcesamiento

@{
    ViewData["Title"] = "Detalles de Facturas de Proveedores";
}

<div class="container py-4">
    @if(Model is null){
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="upload-icon">
                            <i class="fas fa-exclamation-triangle text-warning"></i>
                        </div>
                        <h3 class="mb-3">No hay facturas de proveedores para mostrar</h3>
                        <a href="/" class="btn btn-primary">
                            <i class="fas fa-arrow-left me-2"></i>
                            Volver
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row mb-3">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-file-invoice-dollar me-2"></i>
                        Facturas de Proveedores Procesadas
                    </h5>
                    <div class="d-flex gap-2">
                        <span class="badge badge-success">
                            @Model.Facturas.Count factura(s) de proveedor(es)
                        </span>
                        @if(Model.EsArchivoZip && Model.ArchivosAdjuntos.Any())
                        {
                            <span class="badge badge-secondary">
                                @Model.ArchivosAdjuntos.Count archivo(s) adjunto(s)
                            </span>
                        }
                        <a href="/" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-arrow-left me-1"></i>
                            Volver
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Archivos Adjuntos (solo para ZIP) -->
        @if(Model.EsArchivoZip && Model.ArchivosAdjuntos.Any())
        {
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-paperclip me-2"></i>
                                Archivos Adjuntos
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @foreach(var (archivo, index) in Model.ArchivosAdjuntos.Select((a, i) => (a, i)))
                                {
                                    <div class="col-md-4 mb-3">
                                        <div class="card h-100">
                                            <div class="card-body text-center">
                                                <div class="upload-icon mb-2">
                                                    @if(archivo.Extension == ".pdf")
                                                    {
                                                        <i class="fas fa-file-pdf text-danger"></i>
                                                    }
                                                    else if(archivo.Extension == ".jpg" || archivo.Extension == ".jpeg" || archivo.Extension == ".png")
                                                    {
                                                        <i class="fas fa-file-image text-primary"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-file text-secondary"></i>
                                                    }
                                                </div>
                                                <h6 class="card-title">@archivo.Nombre</h6>
                                                <p class="card-text">
                                                    <small class="text-muted">
                                                        @(archivo.Tamaño / 1024) KB
                                                    </small>
                                                </p>
                                                <div class="btn-group-vertical w-100" role="group">
                                                    <button class="btn btn-primary btn-sm mb-1" onclick="visualizarEnModal(@index, '@archivo.Nombre')">
                                                        <i class="fas fa-eye me-1"></i>
                                                        Ver en Modal
                                                    </button>
                                                    <button class="btn btn-outline-primary btn-sm" onclick="visualizarEnNuevaPestana(@index)">
                                                        <i class="fas fa-external-link-alt me-1"></i>
                                                        Nueva Pestaña
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        
        @foreach(var factura in Model.Facturas)
        {
            <div class="invoice-card mb-3">
                <!-- Invoice Header -->
                <div class="invoice-header">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h6 class="mb-1">@factura.ID.Value</h6>
                            <small class="opacity-75">
                                @(factura.IssueDate?.Value.ToString("dd/MM/yyyy") ?? "N/A")
                            </small>
                        </div>
                        <div class="col-md-4 text-md-end">
                            <span class="badge badge-success">Procesada</span>
                        </div>
                    </div>
                </div>

                <!-- Invoice Body -->
                <div class="invoice-body">
                    <!-- Key Information -->
                    <div class="invoice-section">
                        <div class="section-title">Información del Proveedor</div>
                        <div class="data-row">
                            <span class="data-label">CUFE:</span>
                            <span class="data-value code">@factura.UUID.Value</span>
                        </div>
                        <div class="data-row">
                            <span class="data-label">Proveedor:</span>
                            <span class="data-value">@factura.AccountingCustomerParty.Party.PartyName[0].Name.Value</span>
                        </div>
                        <div class="data-row">
                            <span class="data-label">NIT/RUT:</span>
                            <span class="data-value">
                                @if (@factura.AccountingCustomerParty.Party.PartyIdentification == null)
                                {
                                    @factura.AccountingCustomerParty.Party.PartyLegalEntity[0].CompanyID.Value
                                }
                                else
                                {
                                    @factura.AccountingCustomerParty.Party.PartyIdentification[0].ID.Value
                                }
                            </span>
                        </div>
                    </div>

                    <!-- Products - Collapsible -->
                    <div class="invoice-section">
                        <div class="accordion" id="productsAccordion@(factura.ID.Value.Replace(" ", "").Replace("-", ""))">
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                            data-bs-target="#productsCollapse@(factura.ID.Value.Replace(" ", "").Replace("-", ""))" 
                                            aria-expanded="false" aria-controls="productsCollapse@(factura.ID.Value.Replace(" ", "").Replace("-", ""))">
                                        <i class="fas fa-boxes me-2"></i>
                                        Productos/Servicios (@factura.InvoiceLine.Length)
                                    </button>
                                </h2>
                                <div id="productsCollapse@(factura.ID.Value.Replace(" ", "").Replace("-", ""))" 
                                     class="accordion-collapse collapse" 
                                     data-bs-parent="#productsAccordion@(factura.ID.Value.Replace(" ", "").Replace("-", ""))">
                                    <div class="accordion-body p-0">
                                        <div class="table-responsive">
                                            <table class="table table-compact mb-0">
                                                <thead>
                                                    <tr>
                                                        <th class="text-start">SKU</th>
                                                        <th class="text-start">Descripción</th>
                                                        <th class="text-end">Cantidad</th>
                                                        <th class="text-center">Unidad</th>
                                                        <th class="text-end">Precio Unitario</th>
                                                        <th class="text-end">Descuento</th>
                                                        <th class="text-end">Valor con IVA</th>
                                                        <th class="text-center">% de IVA</th>
                                                        <th class="text-center">Otros Impuestos</th>
                                                        <th class="text-end">Total</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach(var producto in @factura.InvoiceLine)
                                                    {                            
                                                        <tr>
                                                            <td>
                                                                <code>
                                                                    @if(@producto.Item.SellersItemIdentification == null){
                                                                        @producto.Item.StandardItemIdentification.ID.Value
                                                                    }else{
                                                                        @producto.Item.SellersItemIdentification.ID.Value
                                                                    }
                                                                </code>
                                                            </td>
                                                            <td>@producto.Item.Description[0].Value</td>
                                                            <td class="text-end">
                                                                @if(producto.InvoicedQuantity != null)
                                                                {
                                                                    <strong>@producto.InvoicedQuantity.Value.ToString("N2")</strong>
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">-</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                @if(producto.InvoicedQuantity != null && !string.IsNullOrEmpty(producto.InvoicedQuantity.unitCode))
                                                                {
                                                                    <code>@producto.InvoicedQuantity.unitCode</code>
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">-</span>
                                                                }
                                                            </td>
                                                            <td class="text-end">
                                                                @if(producto.Price?.PriceAmount != null)
                                                                {
                                                                    <strong>$@producto.Price.PriceAmount.Value.ToString("N2")</strong>
                                                                    <small class="text-muted">@producto.Price.PriceAmount.currencyID</small>
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">-</span>
                                                                }
                                                            </td>
                                                            <td class="text-end">
                                                                @if(producto.AllowanceCharge != null && producto.AllowanceCharge.Length > 0)
                                                                {
                                                                    var descuento = producto.AllowanceCharge.FirstOrDefault(ac => ac.ChargeIndicator?.Value == false);
                                                                    if(descuento != null)
                                                                    {
                                                                        <strong class="text-danger">-$@descuento.Amount.Value.ToString("N2")</strong>
                                                                        <small class="text-muted">@descuento.Amount.currencyID</small>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="text-muted">-</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">-</span>
                                                                }
                                                            </td>
                                                            <td class="text-end">
                                                                @if(producto.LineExtensionAmount != null)
                                                                {
                                                                    <strong>$@producto.LineExtensionAmount.Value.ToString("N2")</strong>
                                                                    <small class="text-muted">@producto.LineExtensionAmount.currencyID</small>
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">-</span>
                                                                }
                                                            </td>
                                                            <td class="text-center">
                                                                @if(producto.TaxTotal != null && producto.TaxTotal.Length > 0)
                                                                {
                                                                    var ivaTax = producto.TaxTotal.FirstOrDefault(tax => 
                                                                        tax.TaxSubtotal != null && 
                                                                        tax.TaxSubtotal.Length > 0 && 
                                                                        tax.TaxSubtotal.Any(subtotal => 
                                                                            subtotal.TaxCategory?.TaxScheme?.ID?.Value == "01" || 
                                                                            subtotal.TaxCategory?.TaxScheme?.ID?.Value == "02"));
                                                                    if(ivaTax != null && ivaTax.TaxSubtotal.Length > 0)
                                                                    {
                                                                        var ivaSubtotal = ivaTax.TaxSubtotal.FirstOrDefault(subtotal => 
                                                                            subtotal.TaxCategory?.TaxScheme?.ID?.Value == "01" || 
                                                                            subtotal.TaxCategory?.TaxScheme?.ID?.Value == "02");
                                                                        if(ivaSubtotal?.TaxCategory?.Percent?.Value != null && ivaSubtotal.TaxCategory.Percent.Value > 0)
                                                                        {
                                                                            <strong class="text-primary">@ivaSubtotal.TaxCategory.Percent.Value.ToString("N1")%</strong>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span class="text-muted">-</span>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="text-muted">-</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">-</span>
                                                                }
                                                            </td>
                                                            <td class="text-center">
                                                                @{
                                                                    var otrosImpuestos = new List<string>();
                                                                    
                                                                    // Buscar otros impuestos en TaxTotal
                                                                    if(producto.TaxTotal != null && producto.TaxTotal.Length > 0)
                                                                    {
                                                                        foreach(var tax in producto.TaxTotal)
                                                                        {
                                                                            if(tax.TaxSubtotal != null && tax.TaxSubtotal.Length > 0)
                                                                            {
                                                                                foreach(var subtotal in tax.TaxSubtotal)
                                                                                {
                                                                                    var taxSchemeId = subtotal.TaxCategory?.TaxScheme?.ID?.Value;
                                                                                    var taxSchemeName = subtotal.TaxCategory?.TaxScheme?.Name?.Value;
                                                                                    var taxPercent = subtotal.TaxCategory?.Percent?.Value;
                                                                                    
                                                                                    // Excluir IVA (01, 02) y buscar otros impuestos
                                                                                    if(!string.IsNullOrEmpty(taxSchemeId) && 
                                                                                       taxSchemeId != "01" && taxSchemeId != "02")
                                                                                    {
                                                                                        var impuestoInfo = "";
                                                                                        
                                                                                        // Mapear códigos de impuestos conocidos
                                                                                        switch(taxSchemeId)
                                                                                        {
                                                                                            case "03": // INC
                                                                                                impuestoInfo = $"INC {taxPercent?.ToString("N1")}%";
                                                                                                break;
                                                                                            case "04": // Impoconsumo
                                                                                                impuestoInfo = $"Impoconsumo {taxPercent?.ToString("N1")}%";
                                                                                                break;
                                                                                            case "05": // Bolsa
                                                                                                impuestoInfo = "Bolsa";
                                                                                                break;
                                                                                            case "06": // Licores
                                                                                                impuestoInfo = $"Licores {taxPercent?.ToString("N1")}%";
                                                                                                break;
                                                                                            case "07": // Cigarrillos
                                                                                                impuestoInfo = $"Cigarrillos {taxPercent?.ToString("N1")}%";
                                                                                                break;
                                                                                            case "08": // Retención
                                                                                                impuestoInfo = $"Retención {taxPercent?.ToString("N1")}%";
                                                                                                break;
                                                                                            case "09": // Recargo
                                                                                                impuestoInfo = $"Recargo {taxPercent?.ToString("N1")}%";
                                                                                                break;
                                                                                            default:
                                                                                                // Para códigos no mapeados, usar el nombre del esquema si está disponible
                                                                                                if(!string.IsNullOrEmpty(taxSchemeName))
                                                                                                {
                                                                                                    impuestoInfo = $"{taxSchemeName} {taxPercent?.ToString("N1")}%";
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    impuestoInfo = $"Impuesto {taxSchemeId} {taxPercent?.ToString("N1")}%";
                                                                                                }
                                                                                                break;
                                                                                        }
                                                                                        
                                                                                        if(!string.IsNullOrEmpty(impuestoInfo))
                                                                                        {
                                                                                            otrosImpuestos.Add(impuestoInfo);
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    // Buscar cargos adicionales en AllowanceCharge
                                                                    if(producto.AllowanceCharge != null && producto.AllowanceCharge.Length > 0)
                                                                    {
                                                                        foreach(var charge in producto.AllowanceCharge)
                                                                        {
                                                                            // Solo cargos (ChargeIndicator = true), no descuentos
                                                                            if(charge.ChargeIndicator?.Value == true)
                                                                            {
                                                                                var chargeReason = charge.AllowanceChargeReason?.FirstOrDefault()?.Value;
                                                                                var chargeAmount = charge.Amount?.Value;
                                                                                
                                                                                if(!string.IsNullOrEmpty(chargeReason))
                                                                                {
                                                                                    var cargoInfo = $"{chargeReason}";
                                                                                    if(chargeAmount.HasValue)
                                                                                    {
                                                                                        cargoInfo += $" ${chargeAmount.Value.ToString("N2")}";
                                                                                    }
                                                                                    otrosImpuestos.Add(cargoInfo);
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    if(otrosImpuestos.Any())
                                                                    {
                                                                        <div class="small">
                                                                            @foreach(var impuesto in otrosImpuestos)
                                                                            {
                                                                                <div class="text-info mb-1">
                                                                                    <i class="fas fa-tag me-1"></i>
                                                                                    <strong>@impuesto</strong>
                                                                                </div>
                                                                            }
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="text-muted">-</span>
                                                                    }
                                                                }
                                                            </td>
                                                            <td class="text-end">
                                                                @{
                                                                    decimal totalLinea = 0;
                                                                    string moneda = "";
                                                                    
                                                                    // Base: LineExtensionAmount (sin impuestos)
                                                                    if(producto.LineExtensionAmount != null)
                                                                    {
                                                                        totalLinea += producto.LineExtensionAmount.Value;
                                                                        moneda = producto.LineExtensionAmount.currencyID;
                                                                    }
                                                                    
                                                                    // Sumar impuestos
                                                                    if(producto.TaxTotal != null && producto.TaxTotal.Length > 0)
                                                                    {
                                                                        foreach(var tax in producto.TaxTotal)
                                                                        {
                                                                            if(tax.TaxAmount != null)
                                                                            {
                                                                                totalLinea += tax.TaxAmount.Value;
                                                                                if(string.IsNullOrEmpty(moneda))
                                                                                {
                                                                                    moneda = tax.TaxAmount.currencyID;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    if(totalLinea > 0)
                                                                    {
                                                                        <strong>$@totalLinea.ToString("N2")</strong>
                                                                        if(!string.IsNullOrEmpty(moneda))
                                                                        {
                                                                            <small class="text-muted">@moneda</small>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="text-muted">-</span>
                                                                    }
                                                                }
                                                            </td>
                                                        </tr>                        
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Notes -->
                    @if(factura.Note != null && factura.Note.Length > 0)
                    {
                        <div class="invoice-section">
                            <div class="accordion" id="notesAccordion@(factura.ID.Value.Replace(" ", "").Replace("-", ""))">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                                data-bs-target="#notesCollapse@(factura.ID.Value.Replace(" ", "").Replace("-", ""))" 
                                                aria-expanded="false" aria-controls="notesCollapse@(factura.ID.Value.Replace(" ", "").Replace("-", ""))">
                                            <i class="fas fa-sticky-note me-2"></i>
                                            Notas del Proveedor
                                        </button>
                                    </h2>
                                    <div id="notesCollapse@(factura.ID.Value.Replace(" ", "").Replace("-", ""))" 
                                         class="accordion-collapse collapse" 
                                         data-bs-parent="#notesAccordion@(factura.ID.Value.Replace(" ", "").Replace("-", ""))">
                                        <div class="accordion-body">
                                            <div class="alert alert-info mb-0">
                                                @foreach(var nota in factura.Note)
                                                {
                                                    @nota.Value
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        <!-- Mapeo de Datos XML a Formulario -->
        @if(Model.Facturas.Any())
        {
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-exchange-alt me-2"></i>
                                Mapeo de Datos para Entrada de Mercancía
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="text-primary mb-3">Datos del Proveedor</h6>
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Tipo:</label>
                                        <input type="text" class="form-control" value="FACTURA" readonly>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Proveedor:</label>
                                        <input type="text" class="form-control" id="proveedorInput" 
                                               value="@Model.Facturas.First().AccountingCustomerParty.Party.PartyName[0].Name.Value">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Documento:</label>
                                        <input type="text" class="form-control" id="documentoInput" 
                                               value="@Model.Facturas.First().ID.Value">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">NIT/RUT:</label>
                                        <input type="text" class="form-control" id="nitInput" 
                                               value="@(Model.Facturas.First().AccountingCustomerParty.Party.PartyIdentification?.FirstOrDefault()?.ID.Value ?? Model.Facturas.First().AccountingCustomerParty.Party.PartyLegalEntity[0].CompanyID.Value)">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="text-primary mb-3">Fechas y Ubicación</h6>
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">F. Dcto:</label>
                                        <input type="date" class="form-control" id="fechaDocumentoInput" 
                                               value="@Model.Facturas.First().IssueDate?.Value.ToString("yyyy-MM-dd")">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">F. Vence:</label>
                                        <input type="date" class="form-control" id="fechaVencimientoInput" 
                                               value="@Model.Facturas.First().DueDate?.Value.ToString("yyyy-MM-dd")">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Bodega:</label>
                                        <input type="text" class="form-control" id="bodegaInput" placeholder="Seleccionar bodega">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Vendedor:</label>
                                        <input type="text" class="form-control" id="vendedorInput" placeholder="Nombre del vendedor">
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Tabla de Productos Mapeados -->
                            <div class="mt-4">
                                <h6 class="text-primary mb-3">Productos Mapeados</h6>
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover table-compact">
                                        <thead class="table-dark">
                                            <tr>
                                                <th class="text-center">ITEM</th>
                                                <th class="text-start">CODIGO</th>
                                                <th class="text-start">NOMBRE DEL PRODUCTO</th>
                                                <th class="text-center">EMB</th>
                                                <th class="text-end">BASE</th>
                                                <th class="text-end">P. DTO</th>
                                                <th class="text-center">%</th>
                                                <th class="text-center">ORDEN</th>
                                                <th class="text-end">CAJAS</th>
                                                <th class="text-end">UNID</th>
                                                <th class="text-end">TOTAL</th>
                                            </tr>
                                        </thead>
                                        <tbody id="productosTableBody">
                                            @foreach(var (producto, index) in Model.Facturas.First().InvoiceLine.Select((p, i) => (p, i)))
                                            {
                                                <tr>
                                                    <td>@(index + 1)</td>
                                                    <td>
                                                        <code>@(producto.Item.SellersItemIdentification?.ID.Value ?? producto.Item.StandardItemIdentification?.ID.Value)</code>
                                                    </td>
                                                    <td>@producto.Item.Description[0].Value</td>
                                                    <td>
                                                        <input type="text" class="form-control form-control-sm" placeholder="EMB" 
                                                               data-producto-id="@index" data-campo="emb">
                                                    </td>
                                                    <td>
                                                        <input type="number" class="form-control form-control-sm" placeholder="0" 
                                                               data-producto-id="@index" data-campo="base">
                                                    </td>
                                                    <td>
                                                        <input type="number" class="form-control form-control-sm" placeholder="0" 
                                                               data-producto-id="@index" data-campo="precio">
                                                    </td>
                                                    <td>
                                                        <input type="number" class="form-control form-control-sm" placeholder="0" 
                                                               data-producto-id="@index" data-campo="porcentaje">
                                                    </td>
                                                    <td>
                                                        <input type="number" class="form-control form-control-sm" placeholder="0" 
                                                               data-producto-id="@index" data-campo="orden">
                                                    </td>
                                                    <td>
                                                        <input type="number" class="form-control form-control-sm" placeholder="0" 
                                                               data-producto-id="@index" data-campo="cajas">
                                                    </td>
                                                    <td>
                                                        <input type="number" class="form-control form-control-sm" placeholder="0" 
                                                               data-producto-id="@index" data-campo="unidades">
                                                    </td>
                                                    <td>
                                                        <span class="fw-bold total-producto" data-producto-id="@index">$0.00</span>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            
                            <!-- Botones de Acción -->
                            <div class="mt-4 text-center">
                                <button type="button" class="btn btn-success me-2" onclick="copiarDatosAlFormulario()">
                                    <i class="fas fa-copy me-2"></i>
                                    Copiar Datos al Formulario
                                </button>
                                <button type="button" class="btn btn-primary me-2" onclick="exportarDatos()">
                                    <i class="fas fa-file-export me-2"></i>
                                    Exportar Datos
                                </button>
                                <button type="button" class="btn btn-info" onclick="limpiarDatos()">
                                    <i class="fas fa-eraser me-2"></i>
                                    Limpiar Datos
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

<!-- Modal para visualizar documentos -->
<div class="modal fade" id="documentModal" tabindex="-1" aria-labelledby="documentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" style="max-width: 95%; height: 90vh;">
        <div class="modal-content" style="height: 100%;">
            <div class="modal-header">
                <h5 class="modal-title" id="documentModalLabel">
                    <i class="fas fa-file me-2"></i>
                    <span id="documentTitle">Documento</span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="height: calc(100% - 130px); padding: 0;">
                <div id="documentContent" style="display: block; height: 100%;">
                    <div id="documentFrame" style="width: 100%; height: 100%; border: none; overflow: hidden;"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>
                    Cerrar
                </button>
                <button type="button" class="btn btn-primary" id="openInNewTab">
                    <i class="fas fa-external-link-alt me-2"></i>
                    Abrir en Nueva Pestaña
                </button>
                <button type="button" class="btn btn-success" id="downloadFile">
                    <i class="fas fa-download me-2"></i>
                    Descargar
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentDocumentIndex = -1;
        let currentDocumentUrl = '';
        let currentDocumentType = '';

        function visualizarEnModal(index, nombre) {
            currentDocumentIndex = index;
            currentDocumentUrl = `/Facturas/VisualizarAdjunto/${index}`;
            currentDocumentType = getFileType(nombre);
            
            // Actualizar título del modal
            document.getElementById('documentTitle').textContent = nombre;
            
            // Mostrar modal
            const modal = new bootstrap.Modal(document.getElementById('documentModal'));
            modal.show();
            
            // Cargar documento según el tipo
            loadDocumentInModal(currentDocumentUrl, currentDocumentType);
        }

        function loadDocumentInModal(url, fileType) {
            const iframe = document.getElementById('documentFrame');
            
            // Limpiar contenido anterior
            iframe.innerHTML = '';
            
            if (fileType === 'pdf') {
                // Para PDFs, usar iframe simple sin parámetros
                const pdfUrl = url.replace('/VisualizarAdjunto/', '/VisualizarPDF/');
                
                // Crear iframe simple
                const pdfIframe = document.createElement('iframe');
                pdfIframe.src = pdfUrl;
                pdfIframe.style.cssText = 'width: 100%; height: 100%; border: none; display: block; position: absolute; top: 0; left: 0; right: 0; bottom: 0;';
                pdfIframe.setAttribute('frameborder', '0');
                pdfIframe.setAttribute('allowfullscreen', 'true');
                
                // Limpiar y agregar el iframe
                iframe.innerHTML = '';
                iframe.appendChild(pdfIframe);
                
            } else if (fileType === 'image') {
                // Para imágenes, usar img tag
                iframe.innerHTML = `
                    <img src="${url}" style="max-width: 100%; max-height: 100%; display: block; margin: 0 auto; object-fit: contain;" alt="Imagen">
                `;
            } else {
                // Para otros archivos, usar iframe
                iframe.innerHTML = `
                    <iframe src="${url}" style="width: 100%; height: 100%; border: none;"></iframe>
                `;
            }
        }

        function getFileType(fileName) {
            const extension = fileName.toLowerCase().split('.').pop();
            if (extension === 'pdf') return 'pdf';
            if (['jpg', 'jpeg', 'png', 'gif', 'bmp'].includes(extension)) return 'image';
            return 'other';
        }

        function visualizarEnNuevaPestana(index) {
            const resultado = @Html.Raw(Json.Serialize(Model));
            if (resultado && resultado.esArchivoZip && resultado.archivosAdjuntos && resultado.archivosAdjuntos[index]) {
                const archivo = resultado.archivosAdjuntos[index];
                const fileType = getFileType(archivo.nombre);
                
                if (fileType === 'pdf') {
                    // Para PDFs, usar el endpoint específico
                    window.open(`/Facturas/VisualizarPDF/${index}`, '_blank');
                } else {
                    // Para otros archivos, usar el endpoint general
                    window.open(`/Facturas/VisualizarAdjunto/${index}`, '_blank');
                }
            } else {
                // Fallback al endpoint general
                window.open(`/Facturas/VisualizarAdjunto/${index}`, '_blank');
            }
        }

        // Configurar botón "Abrir en Nueva Pestaña" del modal
        document.getElementById('openInNewTab').addEventListener('click', function() {
            if (currentDocumentUrl) {
                window.open(currentDocumentUrl, '_blank');
            }
        });

        // Configurar botón "Descargar" del modal
        document.getElementById('downloadFile').addEventListener('click', function() {
            if (currentDocumentUrl) {
                const link = document.createElement('a');
                link.href = currentDocumentUrl;
                link.download = document.getElementById('documentTitle').textContent;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
        });

        // Auto-expand first accordion if only one invoice
        document.addEventListener('DOMContentLoaded', function() {
            const invoices = document.querySelectorAll('.invoice-card');
            if (invoices.length === 1) {
                // Auto-expand products and notes for single invoice
                const productsAccordion = document.querySelector('.accordion-button');
                if (productsAccordion) {
                    productsAccordion.classList.remove('collapsed');
                    const target = productsAccordion.getAttribute('data-bs-target');
                    const collapse = document.querySelector(target);
                    if (collapse) {
                        collapse.classList.add('show');
                    }
                }
            }
            
            // Configurar eventos para calcular totales
            configurarCalculoTotal();
        });

        // Funciones para mapeo de datos
        function configurarCalculoTotal() {
            const inputs = document.querySelectorAll('input[data-campo]');
            inputs.forEach(input => {
                input.addEventListener('input', calcularTotalProducto);
            });
        }

        function calcularTotalProducto() {
            const productoId = this.getAttribute('data-producto-id');
            const precio = parseFloat(document.querySelector(`input[data-producto-id="${productoId}"][data-campo="precio"]`).value) || 0;
            const cajas = parseFloat(document.querySelector(`input[data-producto-id="${productoId}"][data-campo="cajas"]`).value) || 0;
            const unidades = parseFloat(document.querySelector(`input[data-producto-id="${productoId}"][data-campo="unidades"]`).value) || 0;
            
            const total = precio * (cajas + unidades);
            document.querySelector(`.total-producto[data-producto-id="${productoId}"]`).textContent = `$${total.toFixed(2)}`;
        }

        function copiarDatosAlFormulario() {
            // Recopilar datos del formulario
            const datos = {
                proveedor: document.getElementById('proveedorInput').value,
                documento: document.getElementById('documentoInput').value,
                nit: document.getElementById('nitInput').value,
                fechaDocumento: document.getElementById('fechaDocumentoInput').value,
                fechaVencimiento: document.getElementById('fechaVencimientoInput').value,
                bodega: document.getElementById('bodegaInput').value,
                vendedor: document.getElementById('vendedorInput').value,
                productos: []
            };

            // Recopilar datos de productos
            const filas = document.querySelectorAll('#productosTableBody tr');
            filas.forEach((fila, index) => {
                const producto = {
                    item: index + 1,
                    codigo: fila.querySelector('code').textContent,
                    nombre: fila.querySelector('td:nth-child(3)').textContent,
                    emb: fila.querySelector('input[data-campo="emb"]').value,
                    base: fila.querySelector('input[data-campo="base"]').value,
                    precio: fila.querySelector('input[data-campo="precio"]').value,
                    porcentaje: fila.querySelector('input[data-campo="porcentaje"]').value,
                    orden: fila.querySelector('input[data-campo="orden"]').value,
                    cajas: fila.querySelector('input[data-campo="cajas"]').value,
                    unidades: fila.querySelector('input[data-campo="unidades"]').value,
                    total: fila.querySelector('.total-producto').textContent
                };
                datos.productos.push(producto);
            });

            // Guardar en localStorage para uso en el formulario principal
            localStorage.setItem('datosEntradaMercancia', JSON.stringify(datos));
            
            // Mostrar mensaje de éxito
            mostrarNotificacion('Datos copiados exitosamente', 'success');
        }

        function exportarDatos() {
            const datos = {
                proveedor: document.getElementById('proveedorInput').value,
                documento: document.getElementById('documentoInput').value,
                nit: document.getElementById('nitInput').value,
                fechaDocumento: document.getElementById('fechaDocumentoInput').value,
                fechaVencimiento: document.getElementById('fechaVencimientoInput').value,
                bodega: document.getElementById('bodegaInput').value,
                vendedor: document.getElementById('vendedorInput').value,
                productos: []
            };

            // Recopilar productos
            const filas = document.querySelectorAll('#productosTableBody tr');
            filas.forEach((fila, index) => {
                const producto = {
                    item: index + 1,
                    codigo: fila.querySelector('code').textContent,
                    nombre: fila.querySelector('td:nth-child(3)').textContent,
                    emb: fila.querySelector('input[data-campo="emb"]').value,
                    base: fila.querySelector('input[data-campo="base"]').value,
                    precio: fila.querySelector('input[data-campo="precio"]').value,
                    porcentaje: fila.querySelector('input[data-campo="porcentaje"]').value,
                    orden: fila.querySelector('input[data-campo="orden"]').value,
                    cajas: fila.querySelector('input[data-campo="cajas"]').value,
                    unidades: fila.querySelector('input[data-campo="unidades"]').value,
                    total: fila.querySelector('.total-producto').textContent
                };
                datos.productos.push(producto);
            });

            // Crear archivo CSV
            const csv = generarCSV(datos);
            descargarArchivo(csv, 'datos_entrada_mercancia.csv', 'text/csv');
            
            mostrarNotificacion('Datos exportados exitosamente', 'success');
        }

        function generarCSV(datos) {
            let csv = 'Proveedor,Documento,NIT,Fecha Documento,Fecha Vencimiento,Bodega,Vendedor\n';
            csv += `${datos.proveedor},${datos.documento},${datos.nit},${datos.fechaDocumento},${datos.fechaVencimiento},${datos.bodega},${datos.vendedor}\n\n`;
            csv += 'ITEM,CODIGO,NOMBRE,EMB,BASE,PRECIO,%,ORDEN,CAJAS,UNIDADES,TOTAL\n';
            
            datos.productos.forEach(producto => {
                csv += `${producto.item},${producto.codigo},"${producto.nombre}",${producto.emb},${producto.base},${producto.precio},${producto.porcentaje},${producto.orden},${producto.cajas},${producto.unidades},${producto.total}\n`;
            });
            
            return csv;
        }

        function descargarArchivo(contenido, nombre, tipo) {
            const blob = new Blob([contenido], { type: tipo });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = nombre;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        }

        function limpiarDatos() {
            // Limpiar inputs de productos
            const inputs = document.querySelectorAll('input[data-campo]');
            inputs.forEach(input => {
                input.value = '';
            });
            
            // Limpiar totales
            const totales = document.querySelectorAll('.total-producto');
            totales.forEach(total => {
                total.textContent = '$0.00';
            });
            
            // Limpiar campos principales
            document.getElementById('bodegaInput').value = '';
            document.getElementById('vendedorInput').value = '';
            
            mostrarNotificacion('Datos limpiados exitosamente', 'info');
        }

        function mostrarNotificacion(mensaje, tipo) {
            // Crear notificación Bootstrap
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${tipo} alert-dismissible fade show position-fixed`;
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                ${mensaje}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alertDiv);
            
            // Auto-remover después de 3 segundos
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 3000);
        }
    </script>
}