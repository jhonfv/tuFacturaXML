@{
    ViewData["Title"] = "Procesamiento de Facturas de Proveedores";
}

<div class="container py-4">
    <!-- Upload Section -->
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-upload me-2"></i>
                        Cargar Facturas de Proveedores
                    </h5>
                </div>
                <div class="card-body">
                    <form method="post" action="/Facturas/CargarFactura" enctype="multipart/form-data" id="uploadForm">
                        <div class="upload-area" id="uploadArea">
                            <div class="upload-icon">
                                <i class="fas fa-cloud-upload-alt"></i>
                            </div>
                            <h6 class="mb-2">Arrastra y suelta facturas XML de proveedores</h6>
                            <p class="text-muted mb-3">O haz clic para seleccionar archivos XML o ZIP con facturas</p>
                            <div class="mb-3">
                                <input type="file" class="form-control" name="file" id="fileInput" multiple accept=".xml, .zip" required style="display: none;">
                                <button type="button" class="btn btn-primary" onclick="document.getElementById('fileInput').click()">
                                    <i class="fas fa-folder-open me-2"></i>
                                    Seleccionar Facturas
                                </button>
                            </div>
                            <div id="fileList"></div>
                        </div>
                        
                        <div class="text-center mt-3">
                            <button type="submit" class="btn btn-success" id="submitBtn" disabled>
                                <i class="fas fa-play me-2"></i>
                                Procesar Facturas de Proveedores
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // File upload handling
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const fileList = document.getElementById('fileList');
        const submitBtn = document.getElementById('submitBtn');

        // Drag and drop functionality
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.classList.remove('dragover');
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
            fileInput.files = e.dataTransfer.files;
            updateFileList();
        });

        // File input change
        fileInput.addEventListener('change', updateFileList);

        function updateFileList() {
            fileList.innerHTML = '';
            const files = fileInput.files;
            
            if (files.length > 0) {
                submitBtn.disabled = false;
                
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const fileItem = document.createElement('div');
                    fileItem.className = 'alert alert-info d-flex align-items-center mt-2';
                    fileItem.innerHTML = `
                        <i class="fas fa-file me-2"></i>
                        <span class="flex-grow-1">${file.name}</span>
                        <small class="text-muted">${formatFileSize(file.size)}</small>
                    `;
                    fileList.appendChild(fileItem);
                }
            } else {
                submitBtn.disabled = true;
            }
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Form submission with loading state
        document.getElementById('uploadForm').addEventListener('submit', function() {
            submitBtn.innerHTML = '<span class="loading me-2"></span>Procesando facturas...';
            submitBtn.disabled = true;
        });
    </script>
}
